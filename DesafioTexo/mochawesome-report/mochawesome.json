{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-06-17T17:16:17.063Z",
    "end": "2024-06-17T17:16:17.358Z",
    "duration": 295,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6569a9f1-04f3-4133-a5ec-6205873642a3",
      "title": "",
      "fullFile": "cypress\\e2e\\desafio.cy.js",
      "file": "cypress\\e2e\\desafio.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8f433ae1-c61b-4b40-8b07-50e5a4ea80ca",
          "title": "Automação via Endpoint",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Capturar dados do endpoint /albums/1/photos e validar o item id=6",
              "fullTitle": "Automação via Endpoint Capturar dados do endpoint /albums/1/photos e validar o item id=6",
              "timedOut": null,
              "duration": 245,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Realiza uma requisição GET para o endpoint desejado\ncy.request('GET', 'https://jsonplaceholder.typicode.com/albums/1/photos').then(response => {\n  // Verifica se a requisição retornou um status 200 OK\n  expect(response.status).to.eq(200);\n  // Captura os dados da resposta JSON\n  const data = response.body;\n  // Salvar os dados em um array JSON \n  const jsonData = data.map(item => ({\n    albumId: item.albumId,\n    id: item.id,\n    title: item.title,\n    url: item.url,\n    thumbnailUrl: item.thumbnailUrl\n  }));\n  // Validar os dados do objeto com id = 6\n  const objetoId6 = jsonData.find(item => item.id === 6);\n  expect(objetoId6).to.exist;\n  expect(objetoId6.title).to.equal('accusamus ea aliquid et amet sequi nemo');\n});",
              "err": {},
              "uuid": "2b7e62d1-5ef8-4593-b967-13ff4c8adde2",
              "parentUUID": "8f433ae1-c61b-4b40-8b07-50e5a4ea80ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b7e62d1-5ef8-4593-b967-13ff4c8adde2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 245,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}